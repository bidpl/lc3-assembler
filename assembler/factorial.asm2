.ORIG X3000
START GETC
JSR EVALUATE
BRZP START
HALT
PRINT_HEX ST R0,PRHEX_R0
ST R3,PRHEX_R3
ST R4,PRHEX_R4
ST R5,PRHEX_R5
ST R6,PRHEX_R6
ST R7,PRHEX_R7
AND R4,R4,#0
ADD R4,R4,#4
BITLOOP AND R5,R5,#0
ADD R5,R5,#4
AND R0,R0,#0
DIGLOOP ADD R0,R0,R0
ADD R3,R3,#0
BRZP NO_ADD
ADD R0,R0,#1
NO_ADD ADD R3,R3,R3
ADD R5,R5,#-1
BRP DIGLOOP
ADD R0,R0,#-10
BRZP LETTER
LD R6,OFFSET_0
BR PRINTCH
LETTER LD R6,OFFSET_A
PRINTCH ADD R0,R0,R6
OUT
ADD R4,R4,#-1
BRP BITLOOP
LD R0,PRHEX_R0
LD R3,PRHEX_R3
LD R4,PRHEX_R4
LD R5,PRHEX_R5
LD R6,PRHEX_R6
LD R7,PRHEX_R7
RET
PRHEX_R0 .BLKW #1
PRHEX_R3 .BLKW #1
PRHEX_R4 .BLKW #1
PRHEX_R5 .BLKW #1
PRHEX_R6 .BLKW #1
PRHEX_R7 .BLKW #1
OFFSET_0 .FILL X003A
OFFSET_A .FILL X0041
EVALUATE ST R0,EVAL_R0
ST R1,EVAL_R1
ST R2,EVAL_R2
ST R7,EVAL_R7
OUT
LD R1,EVAL_SPACE
ADD R1,R0,R1
BRZ E_DONE
LD R1,EVAL_9
ADD R1,R0,R1
BRP TRY_EQUAL
ADD R1,R1,#9
BRN TRY_EQUAL
ADD R0,R1,#0
JSR PUSH
BRNZP E_DONE
TRY_EQUAL LD R1,EVAL_EQUAL
ADD R1,R1,R0
BRNP TRY_PLUS
JSR POP
ADD R1,R0,#0
ADD R5,R5,#0
BRP BAD_EQ
JSR POP
ADD R5,R5,#0
BRNZ BAD_EQ
ADD R5,R1,#0
ADD R3,R1,#0
JSR PRINT_HEX
HALT
TRY_PLUS LD R1,EVAL_PLUS
ADD R1,R1,R0
BRNP TRY_MIN
JSR GETARGS
JSR PLUS
JSR PUSH
BRNZP E_DONE
TRY_MIN LD R1,EVAL_MINUS
ADD R1,R1,R0
BRNP TRY_TIMES
JSR GETARGS
JSR MIN
JSR PUSH
BRNZP E_DONE
TRY_TIMES LD R1,EVAL_TIMES
ADD R1,R1,R0
BRNP TRY_DIV
JSR GETARGS
JSR MUL
JSR PUSH
BRNZP E_DONE
TRY_DIV LD R1,EVAL_DIV
ADD R1,R1,R0
BRNP TRY_EXP
JSR GETARGS
JSR DIV
JSR PUSH
BRNZP E_DONE
TRY_EXP LD R1,EVAL_EXP
ADD R1,R1,R0
BRNP NOT_EXP
JSR GETARGS
JSR EXP
JSR PUSH
BRNZP E_DONE
NOT_EXP BRNZP BAD_IN
E_DONE LD R0,EVAL_R0
LD R1,EVAL_R1
LD R2,EVAL_R2
LD R7,EVAL_R7
RET
BAD_IN LD R0,ASCIIEQ
OUT
BAD_EQ LEA R0,INVALID
PUTS
HALT
ASCIIEQ .FILL X003D
INVALID .STRINGZ "Invalid Expression"
GETARGS ST R5,GETA_R5
ST R7,GETA_R7
JSR POP
ADD R4,R0,#0
JSR POP
ADD R3,R0,#0
ADD R5,R5,#0
BRP BAD_IN
LD R5,GETA_R5
LD R7,GETA_R7
RET
GETA_R5 .BLKW #1
GETA_R7 .BLKW #1
EVAL_R0 .BLKW #1
EVAL_R1 .BLKW #1
EVAL_R2 .BLKW #1
EVAL_R7 .BLKW #1
EVAL_SPACE .FILL XFFE0
EVAL_EQUAL .FILL XFFC3
EVAL_PLUS .FILL XFFD5
EVAL_MINUS .FILL XFFD3
EVAL_TIMES .FILL XFFD6
EVAL_DIV .FILL XFFD1
EVAL_EXP .FILL XFFA2
EVAL_9 .FILL XFFC7
PLUS ADD R0,R3,R4
RET
MIN NOT R4,R4
ADD R4,R4,#1
ADD R0,R3,R4
RET
MUL AND R0,R0,#0
ADD R4,R4,#0
BRN MUL_NEG
MULLOOP ADD R4,R4,#0
BRZ MUL_END
ADD R0,R0,R3
ADD R4,R4,#-1
BRNZP MULLOOP
MUL_NEG NOT R3,R3
ADD R3,R3,#1
NOT R4,R4
ADD R4,R4,#1
BRNZP MULLOOP
MUL_END RET
DIV ST R1,DIV_R1
AND R0,R0,#0
ADD R1,R1,#-1
ADD R3,R3,#0
BRZP D1_POS
NOT R3,R3
ADD R3,R3,#1
NOT R1,R1
D1_POS ADD R4,R4,#0
BRN D_LOOP
NOT R4,R4
ADD R4,R4,#1
NOT R1,R1
D_LOOP ADD R3,R3,R4
BRN DIV_END
ADD R0,R0,#1
BRNZP D_LOOP
DIV_END ADD R1,R1,#0
BRZ ANS_POS
NOT R0,R0
ADD R0,R0,#1
ANS_POS LD R1,DIV_R1
RET
DIV_R1 .BLKW #1
EXP ST R1,EXP_R1
AND R0,R0,#0
ADD R0,R0,#1
EXPLOOP ADD R4,R4,#-1
BRN EXP_END
ADD R1,R0,#0
AND R0,R0,#0
EXP_MUL ADD R1,R1,#-1
BRN EXPLOOP
ADD R0,R0,R3
BRNZP EXP_MUL
EXP_END LD R1,EXP_R1
RET
EXP_R1 .BLKW #1
PUSH ST R3,PUSH_SAVER3
ST R4,PUSH_SAVER4
AND R5,R5,#0
LD R3,STACK_END
LD R4,STACK_TOP
ADD R3,R3,#-1
NOT R3,R3
ADD R3,R3,#1
ADD R3,R3,R4
BRZ OVERFLOW
STR R0,R4,#0
ADD R4,R4,#-1
ST R4,STACK_TOP
BRNZP DONE_PUSH
OVERFLOW ADD R5,R5,#1
DONE_PUSH LD R3,PUSH_SAVER3
LD R4,PUSH_SAVER4
RET
PUSH_SAVER3 .BLKW #1
PUSH_SAVER4 .BLKW #1
POP ST R3,POP_SAVER3
ST R4,POP_SAVER4
AND R5,R5,#0
LD R3,STACK_START
LD R4,STACK_TOP
NOT R3,R3
ADD R3,R3,#1
ADD R3,R3,R4
BRZ UNDERFLOW
ADD R4,R4,#1
LDR R0,R4,#0
ST R4,STACK_TOP
BRNZP DONE_POP
UNDERFLOW ADD R5,R5,#1
DONE_POP LD R3,POP_SAVER3
LD R4,POP_SAVER4
RET
POP_SAVER3 .BLKW #1
POP_SAVER4 .BLKW #1
STACK_END .FILL X3FF0
STACK_START .FILL X4000
STACK_TOP .FILL X4000
.END
